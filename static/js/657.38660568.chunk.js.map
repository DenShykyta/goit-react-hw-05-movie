{"version":3,"file":"static/js/657.38660568.chunk.js","mappings":"sKACA,MAA4B,8B,0BCkB5B,EAfmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaN,GAAhD,SACGC,KAF8BD,EADzB,KASjB,C,+LCfDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKO,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,qICjC5B,EAAuB,mB,SCiCvB,EA9Ba,SAAC,GAAyB,IAAvBQ,EAAsB,EAAtBA,gBACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KAcA,OACE,kBAAMnB,UAAWC,EAAUmB,SATR,SAAAC,GAEnB,GADAA,EAAMC,iBACe,KAAjBX,EAAMY,OACR,OAAOC,MAAM,qBAEfP,EAAgB,CAAEN,MAAAA,GACnB,EAGC,WACE,kBACEc,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,sBACZC,MAAOlB,EACPmB,SApBqB,SAAAT,GACzBF,EAASE,EAAMU,OAAOF,MACvB,KAoBG,mBAAQJ,KAAK,SAAb,sBAGL,E,SCED,EA5Be,WACb,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOxB,EAAP,KAAesC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBjB,EAArB,KAkBA,OAhBAkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAqB,OAAjBD,EAAJ,CAGA,IAAME,EAAiB,mCAAG,8GAEK5B,EAAAA,EAAAA,IAAgB0B,GAFrB,OAEhBG,EAFgB,OAGtBP,EAAUO,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBH,GATC,CAUF,GAAE,CAACJ,KAGF,4BACE,SAAC,EAAD,CAAMjB,gBAAiBA,KACvB,SAACyB,EAAA,EAAD,CAAYhD,OAAQA,MAGzB,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","components/services/api.js","webpack://react-homework-template/./src/components/searchForm/Form.module.css?295c","components/searchForm/Form.js","pages/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list_item\":\"MoviesList_list_item__WNhrl\"};","import css from './MoviesList.module.css';\nimport { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(({ id, original_title }) => (\n        <li className={css.list_item} key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0855e5c8bd4c6414816e74d753a96a04';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__KEwht\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Form.module.css';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSearchParams = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      return alert('Input searchText!');\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies title\"\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  setSearchParams: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'components/services/api';\nimport Form from 'components/searchForm/Form';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (currentQuery === null) {\n      return;\n    }\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <Form setSearchParams={setSearchParams} />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","id","original_title","className","css","state","from","to","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","setSearchParams","useState","setQuery","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","movieByQuery","console","log","MoviesList"],"sourceRoot":""}